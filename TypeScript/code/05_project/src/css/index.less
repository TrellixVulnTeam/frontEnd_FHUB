// 设置变量
@bg-color: #b7d4a8;

// 清除默认样式
* {
    padding: 0;
    margin: 0;
    // 改变盒子模型的计算方式，不会撑大盒子
    box-sizing: border-box;
}

//设置字体
body {
    font: bold 20px "Courier"
}

// 设置主界面样式
#main_container {
    width: 360px;
    height: 420px;
    //设置边框
    border: 10px solid #000;
    // 设置圆角
    border-radius: 20px;
    // 设置居中
    margin: 100px auto;
    background-color: @bg-color;
    // 压出游戏界面
    // padding: 20px;
    // 开启弹性盒模型
    display: flex;
    // 设置主轴的方向，将垂直方向设为主轴
    flex-direction: column;
    // 两个盒子在垂直方向上进行排列
    justify-content: space-around;
    // 两个盒子在水平方向上的排列 
    align-items: center;
    // 定位，方便食物和蛇改变位置
    position: relative;

    // 设置游戏主舞台样式
    #stage {
        width: 304px;
        height: 304px;
        border: 3px solid #000;
        // 开启定位，方便蛇的移动
        position: relative;

        // 对蛇进行设置
        #snake {

            //选中id为snake的亲儿子节点。
            &>div {
                // 利用定位移动div
                position: absolute;
                width: 10px;
                height: 10px;
                background-color: #000;
                // 设置border，看起来就有间隙了，color设置和背景色一样
                border: 1px solid @bg-color;
            }
        }

        // 对食物进行设置
        #food {
            width: 10px;
            height: 10px;
            //改变食物位置
            position: absolute;
            top: 40px;
            left: 20px;

            // 开启弹性布局
            display: flex;
            // 设置主轴
            flex-direction: row;
            // 设置超出部分要换行
            flex-wrap: wrap;
            // 设置主轴上的-排列：先贴边，再让元素之间的距离平分剩余空间
            justify-content: space-between;
            // 设置侧轴上的-排列：先贴边，再让元素之间的距离平分剩余空间。注意侧轴上有两列，所以要用多列的那个属性
            align-content: space-between;

            &>div {
                // float: left;
                width: 5px;
                height: 5px;
                // 设置圆角边框，让食物看起来更好看
                border-radius: 50%;
                background-color: #000;

            }
        }
    }

    // 设置积分牌样式
    #score_panel {
        width: 304px;
        // margin-top: 20px;
        // 开启盒子模型，实现两边贴边的效果
        display: flex;
        // 设置默认主轴水平方向上的排列方式
        justify-content: space-between;

    }
}